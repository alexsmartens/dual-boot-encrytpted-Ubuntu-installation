## Links 
https://help.ubuntu.com/community/Full_Disk_Encryption_Howto_2019
https://linsomniac.gitlab.io/post/2020-04-09-ubuntu-2004-encrypted-zfs/
# Mounting ZFS pools 
https://www.cyberciti.biz/faq/freebsd-linux-unix-zfs-automatic-mount-points-command/

https://serverfault.com/questions/972496/can-i-encrypt-a-whole-pool-with-zfsol-0-8-1
https://www.youtube.com/watch?v=oYm4iYu2ugY

https://www.medo64.com/2020/04/installing-uefi-zfs-root-on-ubuntu-20-04/
https://github.com/dynerose/Remote-unlock-native-ZFS/blob/bef71dc4df0e39d41d3a8e26bed5a86d28c7d44a/install.bash
https://github.com/chungy/zfs-boottime-encryption/blob/dcf2a40cc1fa7d579b54edda3322e482c31ead03/README.adoc

https://blog.seonwoolee.com/using-zfs-native-encryption-on-root/
https://zfs.datto.com/2017_slides/caputi.pdf



https://github.com/FloatingOctothorpe/floatingoctothorpe.github.io/tree/cb38db98d539b72a7aed2e1bbf955dd60c7595c4/2020
https://github.com/nosuz/instant-zfs-root-fs/blob/acfd7d22a76d5b08b2daaba22d085c2265d166e3/instant-zfs-root-fs.sh

https://github.com/openzfs/zfs/issues/4898
https://utcc.utoronto.ca/~cks/space/blog/linux/SystemdAndBindMounts
https://serverfault.com/questions/972496/can-i-encrypt-a-whole-pool-with-zfsol-0-8-1

# Issue
https://github.com/openzfs/zfs/issues/6556#issuecomment-633377704
https://unix.stackexchange.com/questions/92720/does-initramfs-use-etc-fstab

sudo -i

POOL=rpool
HOST=media-hub
USER=media-hub
DISK=/dev/sda
INSTALL_DIR=/mnt/install/

apt update --yes
# apt-add-repository universe 
apt install --yes debootstrap gdisk dkms dpkg-dev


# 1. Partitioning

sgdisk --zap-all $DISK


sgdisk --new=1:0:+2000M $DISK
sgdisk --new=2:0:+512M $DISK
sgdisk --new=3:0:+92160M $DISK
# sgdisk --typecode=1:8301 --typecode=2:ef00 --typecode=3:8301 $DISK
sgdisk --typecode=1:8300 --typecode=2:EF00 --typecode=3:BF01 $DISK
sgdisk --change-name=1:/boot --change-name=2:EFI-SP --change-name=3:rootfs $DISK
sgdisk --print $DISK

# Step 1 of adding the key to $POOL ***on Ubuntu Live OS*** 
dd if=/dev/random of=/boot/${POOL}.key bs=1 count=32

zpool create -f \
-o ashift=12 \
-O acltype=posixacl \
-O canmount=off \
-O compression=lz4 \
-O dnodesize=auto \
-O encryption=aes-256-gcm \
-O keylocation=file:///boot/${POOL}.key \
-O keyformat=raw \
-O mountpoint=/ \
-O normalization=formD \
-O relatime=on \
-O recordsize=1M \
-O sync=disabled \
-O xattr=sa \
-R $INSTALL_DIR $POOL ${DISK}3

#-O keylocation=file://$(pwd)/${POOL}.key \
#-O keyformat=raw \

zpool list
zfs get keylocation $POOL

zfs create -o canmount=noauto -o mountpoint=/ $POOL/root
zfs mount $POOL/root
# Datasets
zfs create -o mountpoint=/home ${POOL}/home
zfs create ${POOL}/var
zfs mount -a

yes | mkfs.ext4 ${DISK}1
mkdir ${INSTALL_DIR}boot
mount ${DISK}1 ${INSTALL_DIR}boot/


mkfs.msdos -F 32 -n EFI ${DISK}2
mkdir ${INSTALL_DIR}boot/efi
mount ${DISK}2 ${INSTALL_DIR}boot/efi


# Step 2 copy the key to the final OS
cp /boot/${POOL}.key ${INSTALL_DIR}boot/${POOL}.key


INCLUDES='--include tzdata,wget,nano'
debootstrap $INCLUDES focal $INSTALL_DIR 
zfs set devices=off $POOL


# 2 OS Configuration

echo $HOST > /mnt/install/etc/hostname
sed "s/ubuntu/$HOST/" /etc/hosts > ${INSTALL_DIR}etc/hosts
sed '/cdrom/d' /etc/apt/sources.list > ${INSTALL_DIR}etc/apt/sources.list
cp /etc/netplan/*.yaml ${INSTALL_DIR}/etc/netplan/

mount --rbind /dev  ${INSTALL_DIR}dev
mount --rbind /proc ${INSTALL_DIR}proc
mount --rbind /sys  ${INSTALL_DIR}sys

chroot ${INSTALL_DIR} /usr/bin/env \
DISK=$DISK POOL=$POOL USER=$USER INSTALL_DIR=$INSTALL_DIR \
bash --login


locale-gen --purge "en_US.UTF-8"
update-locale LANG=en_US.UTF-8 LANGUAGE=en_US
dpkg-reconfigure --frontend noninteractive locales
dpkg-reconfigure tzdata

# Install latest Linux image and ZFS
apt install --yes --no-install-recommends linux-image-generic linux-headers-generic
apt install --yes dpkg-dev 

echo "zfs-dkms zfs-dkms/note-incompatible-licenses note true" | debconf-set-selections 
# apt install --yes zfs-dkms 
apt install --yes zfs-initramfs grub-efi-amd64-signed shim-signed tasksel
#apt install -y zfsutils-linux gdisk efibootmgr 

echo "PARTUUID=$(blkid -s PARTUUID -o value ${DISK}1) \
/boot ext4 noatime,nofail,x-systemd.device-timeout=1 0 1" >> /etc/fstab
echo "PARTUUID=$(blkid -s PARTUUID -o value ${DISK}2) \
/boot/efi vfat noatime,nofail,x-systemd.device-timeout=1 0 1" >> /etc/fstab
cat /etc/fstab

cat > /etc/systemd/system/zfs-load-key.service <<EOF
[Unit]
Description=Load encryption keys
Documentation=man:zfs(8)
DefaultDependencies=False
After=zfs-import.target
Before=zfs-mount.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/bin/zfs load-key -a

[Install]
WantedBy=zfs-mount.service
EOF

cat /etc/systemd/system/zfs-load-key.service 

systemctl enable zfs-load-key.service

systemctl list-unit-files | grep zfs

# All disabled service must be enabled
sudo systemctl enable zfs-import-scan.service


# 4. Grub Installation
grub-probe /boot
# ext2

# !!! Correct arguments if needed
sed -E 's>^(GRUB_CMDLINE_LINUX=")>\1root=ZFS=rpool/root>' /etc/default/grub -i
cat /etc/default/grub
# ...
# GRUB_CMDLINE_LINUX="root=ZFS=rpool/root"
# ...

echo 'GRUB_DISABLE_OS_PROBER=true' >> /etc/default/grub 

KERNEL=`ls /usr/lib/modules/ | cut -d/ -f1 | sed 's/linux-image-//'`
update-initramfs -c -k $KERNEL

## !!! >> Edit initramfs init at this point
# /usr/share/initramfs-tools/init

update-grub

# For some reason it does not work for the first time
( crontab -l ; echo "@reboot mount /boot ; mount /boot/efi" ) | crontab -
#( crontab -l ; echo "@reboot mount /boot ; mount /boot/efi" ) | crontab -
crontab -l

grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ubuntu --recheck --no-floppy

# Verify that the ZFS module is installed:
ls /boot/grub/*/zfs.mod

# Install GUI
tasksel install ubuntu-desktop

adduser $USER
addgroup $USER sudo


exit
umount ${INSTALL_DIR}boot/efi
umount ${INSTALL_DIR}boot
mount | grep -v zfs | tac | awk '/\/mnt/ {print $3}' | xargs -i{} umount -lf {}
zpool export -a
